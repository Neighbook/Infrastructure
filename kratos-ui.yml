apiVersion: v1
kind: Namespace
metadata:
  name: kratos-ui-namespace
  labels:
    name: kratos-ui-namespace
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: my-kratos-selfservice-ui-node
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kratos-selfservice-ui-node
    app.kubernetes.io/version: v0.10.1
    helm.sh/chart: kratos-selfservice-ui-node-0.32.0
  name: kratos-selfservice-ui
  namespace: kratos-ui-namespace
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-kratos-selfservice-ui-node
      app.kubernetes.io/name: kratos-selfservice-ui-node
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: my-kratos-selfservice-ui-node
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kratos-selfservice-ui-node
        app.kubernetes.io/version: v0.10.1
        helm.sh/chart: kratos-selfservice-ui-node-0.32.0
    spec:
      automountServiceAccountToken: false
      containers:
      - env:
        - name: KRATOS_PUBLIC_URL
          value: http://127.0.0.1:4433
        - name: KRATOS_BROWSER_URL
          value: http://127.0.0.1:4433
        - name: PROJECT_NAME
          value: SecureApp
        - name: BASE_URL
          value: http://localhost:3000
        - name: JWKS_URL
          value: http://oathkeeper-api
        - name: KRATOS_ADMIN_URL
          value: http://localhost:4434
        - name: SECURITY_MODE
        image: oryd/kratos-selfservice-ui-node:v0.10.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/alive
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: kratos-selfservice-ui-node
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health/ready
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2023-05-04T06:08:37Z"
    lastUpdateTime: "2023-05-04T06:08:37Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2023-05-03T21:19:26Z"
    lastUpdateTime: "2023-05-04T07:52:51Z"
    message: ReplicaSet "my-kratos-selfservice-ui-node-797dfd4bb9" has successfully
      progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 21
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
